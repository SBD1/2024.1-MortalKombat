{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"2024.1-MortalKombat (MUD)","text":"<p>GithubPages para a disciplina de Banco de Dados 2024.1 Grupo Mortal Kombat</p>"},{"location":"#integrantes","title":"Integrantes","text":"Matr\u00edcula Nome GitHub 15/0137770 Lude Ribeiro @LudeRibeiro 19/0088168 Guilerme Vilela @guivilela7 00/0000000 Vinicius Alves @viniAlves2020"},{"location":"#descricao-do-projeto","title":"Descri\u00e7\u00e3o do Projeto","text":"<p>O projeto consiste em um jogo de luta com mec\u00e2nicas de torre e salas de batalha. Baseado no modo hist\u00f3ria do jogo Mortal Kombat, o jogador ter\u00e1 que passar por v\u00e1rias salas de batalha, cada uma com um inimigo diferente, e com um \"Boss\" a cada 4 salas, para conseguir chegar at\u00e9 o final do jogo. O jogador ter\u00e1 que escolher um personagem para jogar, e cada personagem ter\u00e1 suas pr\u00f3prias habilidades caracter\u00edsticas e n\u00edveis com seus respectivos \"perks\".</p>"},{"location":"#entrega-1","title":"Entrega 1","text":"<ul> <li>MER: Modelo Entidade Relacionamento</li> <li>DD: Dicion\u00e1rio de Dados</li> <li>DR: Diagrama Relacional</li> </ul>"},{"location":"Entrega1/DD_MortalKombat_v1/","title":"Dicion\u00e1rio de Dados - Mortal Kombat","text":"<p>O dicion\u00e1rio de dados \u00e9 uma ferramenta utilizada para descrever os dados de um sistema, mostrando os atributos das entidades e seus tipos. O dicion\u00e1rio de dados \u00e9 uma representa\u00e7\u00e3o textual que facilita a compreens\u00e3o da estrutura de um banco de dados.</p> <p>O dicion\u00e1rio de dados fornecido uma vis\u00e3o detalhada dos atributos das entidades, mostrando os tipos de dados e as restri\u00e7\u00f5es aplicadas a eles. O dicion\u00e1rio de dados \u00e9 uma ferramenta importante para o desenvolvimento de sistemas de banco de dados, pois ajuda a identificar os atributos necess\u00e1rios para o sistema.</p>"},{"location":"Entrega1/DD_MortalKombat_v1/#historico-de-versao","title":"Hist\u00f3rico de Vers\u00e3o","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) 29/08/2021 1.0 Cria\u00e7\u00e3o do Dicion\u00e1rio de Dados Lude Ribeiro, Vinicius Alves, Guilherme Vilela"},{"location":"Entrega1/DR_MortalKombat_v1/","title":"Diagrama Relacional","text":"<p>O diagrama relacional \u00e9 uma representa\u00e7\u00e3o gr\u00e1fica que mostra as tabelas de um banco de dados e os relacionamentos entre elas. O diagrama relacional \u00e9 uma ferramenta importante para o desenvolvimento de sistemas de banco de dados, pois ajuda a visualizar a estrutura do banco de dados e os relacionamentos entre as tabelas.</p> <p></p> <p>Figura 1: Diagrama Relacional Mortal Kombat</p> <p>Fonte: Autores</p>"},{"location":"Entrega1/DR_MortalKombat_v1/#historico-de-versao","title":"Hist\u00f3rico de Vers\u00e3o","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) 29/08/2021 1.0 Cria\u00e7\u00e3o do DR Lude Ribeiro, Vinicius Alves, Guilherme Vilela"},{"location":"Entrega1/MER_MortalKombat_v1/","title":"Modelo Entidade Relacionamento (MER) - Mortal Kombat","text":"<p>O Modelo Entidade Relacionamento (MER) \u00e9 uma ferramenta utilizada para modelar os dados de um sistema, mostrando as entidades envolvidas e os relacionamentos entre elas. O MER \u00e9 uma representa\u00e7\u00e3o gr\u00e1fica que facilita a visualiza\u00e7\u00e3o e compreens\u00e3o da estrutura de um banco de dados.</p> <p>O diagrama fornecido uma vis\u00e3o geral do sistema, mostrando as entidades principais e seus atributos, bem como os relacionamentos entre elas. O MER \u00e9 uma ferramenta importante para o desenvolvimento de sistemas de banco de dados, pois ajuda a identificar as entidades e relacionamentos necess\u00e1rios para o sistema.</p> <p></p> <p>Figura 1: DER Mortal Kombat</p> <p>Fonte: Autores</p>"},{"location":"Entrega1/MER_MortalKombat_v1/#historico-de-versao","title":"Hist\u00f3rico de Vers\u00e3o","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) 29/08/2021 1.0 Cria\u00e7\u00e3o do MER Lude Ribeiro, Vinicius Alves, Guilherme Vilela"},{"location":"Entrega2/ScriptCreationTables/","title":"Scripts de Cria\u00e7\u00e3o das Tabelas","text":"<p>A seguir, temos os scripts de cria\u00e7\u00e3o das tabelas do banco de dados do projeto Mortal Kombat.</p> <p>Os scripts a seguir podem ser encontrados no reposit\u00f3rio do projeto, no caminho <code>docs/sql/tables/create.sql</code>.</p>"},{"location":"Entrega2/ScriptCreationTables/#criacao-das-tabelas","title":"Cria\u00e7\u00e3o das Tabelas","text":""},{"location":"Entrega2/ScriptCreationTables/#tabela-de-sala-de-combate","title":"Tabela de Sala de Combate","text":"<p>A tabela <code>SalaCombate</code> armazena informa\u00e7\u00f5es sobre as salas de combate dispon\u00edveis no jogo. S\u00e3o armazenados o <code>idSalaCombate</code>, <code>Andar</code>, <code>Numero</code> e <code>Nome</code> da sala.</p> <pre><code>Script SQL de cria\u00e7\u00e3o da tabela SalaCombate\n</code></pre> <pre><code>CREATE TABLE SalaCombate (\n    idSalaCombate INT PRIMARY KEY,\n    Andar INT NOT NULL,\n    Numero INT NOT NULL,\n    Nome VARCHAR(100) NOT NULL\n);\n</code></pre>"},{"location":"Entrega2/ScriptCreationTables/#tabela-de-sala-de-evento","title":"Tabela de Sala de Evento","text":"<p>A tabela <code>SalaEvento</code> armazena informa\u00e7\u00f5es sobre as salas de evento dispon\u00edveis no jogo. S\u00e3o armazenados o <code>idSalaEvento</code>, <code>Andar</code>, <code>Numero</code>, <code>Nome</code> e <code>Descricao</code> da sala.</p> <pre><code>Script SQL de cria\u00e7\u00e3o da tabela SalaEvento\n</code></pre> <pre><code>CREATE TABLE SalaEvento (\n    idSalaEvento INT PRIMARY KEY,\n    Andar INT NOT NULL,\n    Numero INT NOT NULL,\n    Nome VARCHAR(100) NOT NULL,\n    Descricao TEXT NOT NULL\n);\n</code></pre>"},{"location":"Entrega2/ScriptCreationTables/#tabela-de-combate","title":"Tabela de Combate","text":"<p>A tabela <code>Combate</code> armazena informa\u00e7\u00f5es sobre os combates que ocorrem nas salas de combate. S\u00e3o armazenados o <code>idCombate</code> e o <code>idSalaCombate</code> onde o combate ocorre.</p> <pre><code>Script SQL de cria\u00e7\u00e3o da tabela Combate\n</code></pre> <pre><code>CREATE TABLE Combate (\n    idCombate INT PRIMARY KEY,\n    idSalaCombate INT NOT NULL,\n    FOREIGN KEY (idSalaCombate) REFERENCES SalaCombate(idSalaCombate) ON DELETE RESTRICT\n);\n</code></pre>"},{"location":"Entrega2/ScriptCreationTables/#tabela-de-lutador","title":"Tabela de Lutador","text":"<p>A tabela <code>Lutador</code> armazena informa\u00e7\u00f5es sobre os lutadores do jogo. S\u00e3o armazenados o <code>idLutador</code>, <code>Nivel</code>, <code>Defesa</code>, <code>Vida</code> e <code>Nome</code> do lutador.</p> <pre><code>Script SQL de cria\u00e7\u00e3o da tabela Lutador\n</code></pre> <pre><code>CREATE TABLE Lutador (\n    idLutador INT PRIMARY KEY,\n    Nivel INT NOT NULL,\n    Defesa INT NOT NULL,\n    Vida INT NOT NULL,\n    Nome VARCHAR(100) NOT NULL,\n    CHECK (Nivel &gt;= 1 AND Defesa &gt;= 0 AND Vida &gt;= 0) -- Constraints para validar atributos\n);\n</code></pre>"},{"location":"Entrega2/ScriptCreationTables/#tabela-de-lutadorchefe","title":"Tabela de LutadorChefe","text":"<p>A tabela <code>LutadorChefe</code> armazena informa\u00e7\u00f5es sobre os lutadores chefes do jogo. S\u00e3o armazenados o <code>idLutadorChefe</code>, <code>idLutador</code>, <code>MelhoriaAtaque</code> e <code>MelhoriaDefesa</code> do lutador chefe.</p> <pre><code>Script SQL de cria\u00e7\u00e3o da tabela LutadorChefe\n</code></pre> <pre><code>CREATE TABLE LutadorChefe (\n    idLutadorChefe INT PRIMARY KEY,\n    idLutador INT NOT NULL,\n    MelhoriaAtaque INT NOT NULL,\n    MelhoriaDefesa INT NOT NULL,\n    FOREIGN KEY (idLutador) REFERENCES Lutador(idLutador) ON DELETE RESTRICT,\n    CHECK (MelhoriaAtaque &gt;= 0 AND MelhoriaDefesa &gt;= 0)\n);\n</code></pre>"},{"location":"Entrega2/ScriptCreationTables/#tabela-de-arma","title":"Tabela de Arma","text":"<p>A tabela <code>Arma</code> armazena informa\u00e7\u00f5es sobre as armas dispon\u00edveis no jogo. S\u00e3o armazenados o <code>idArma</code>, <code>AtkFisico</code>, <code>AtkEspecial</code>, <code>Nivel</code> e <code>Habilidade</code> da arma.</p> <pre><code>Script SQL de cria\u00e7\u00e3o da tabela Arma\n</code></pre> <pre><code>CREATE TABLE Arma (\n    idArma INT PRIMARY KEY,\n    AtkFisico INT NOT NULL,\n    AtkEspecial INT NOT NULL,\n    Nivel INT NOT NULL,\n    Habilidade VARCHAR(100),\n    CHECK (AtkFisico &gt;= 0 AND AtkEspecial &gt;= 0 AND Nivel &gt;= 1)\n);\n</code></pre>"},{"location":"Entrega2/ScriptCreationTables/#tabela-de-armadura","title":"Tabela de Armadura","text":"<p>A tabela <code>Armadura</code> armazena informa\u00e7\u00f5es sobre as armaduras dispon\u00edveis no jogo. S\u00e3o armazenados o <code>idArmadura</code>, <code>DefesaFisica</code>, <code>DefesaEspecial</code>, <code>Vida</code> e <code>Nivel</code> da armadura.</p> <pre><code>Script SQL de cria\u00e7\u00e3o da tabela Armadura\n</code></pre> <pre><code>CREATE TABLE Armadura (\n    idArmadura INT PRIMARY KEY,\n    DefesaFisica INT NOT NULL,\n    DefesaEspecial INT NOT NULL,\n    Vida INT NOT NULL,\n    Nivel INT NOT NULL,\n    CHECK (DefesaFisica &gt;= 0 AND DefesaEspecial &gt;= 0 AND Vida &gt;= 0 AND Nivel &gt;= 1)\n);\n</code></pre>"},{"location":"Entrega2/ScriptCreationTables/#tabela-de-amuleto","title":"Tabela de Amuleto","text":"<p>A tabela <code>Amuleto</code> armazena informa\u00e7\u00f5es sobre os amuletos dispon\u00edveis no jogo. S\u00e3o armazenados o <code>idAmuleto</code>, <code>Defesa</code>, <code>AtaqueFisico</code>, <code>AtaqueEspecial</code>, <code>Vida</code> e <code>Nivel</code> do amuleto.</p> <pre><code>Script SQL de cria\u00e7\u00e3o da tabela Amuleto\n</code></pre> <pre><code>CREATE TABLE Amuleto (\n    idAmuleto INT PRIMARY KEY,\n    Defesa INT NOT NULL,\n    AtaqueFisico INT NOT NULL,\n    AtaqueEspecial INT NOT NULL,\n    Vida INT NOT NULL,\n    Nivel INT NOT NULL,\n    CHECK (Defesa &gt;= 0 AND AtaqueFisico &gt;= 0 AND AtaqueEspecial &gt;= 0 AND Vida &gt;= 0 AND Nivel &gt;= 1)\n);\n</code></pre>"},{"location":"Entrega2/ScriptCreationTables/#tabela-de-consumivel","title":"Tabela de Consum\u00edvel","text":"<p>A tabela <code>Consumivel</code> armazena informa\u00e7\u00f5es sobre os consum\u00edveis dispon\u00edveis no jogo. S\u00e3o armazenados o <code>idConsumivel</code>, <code>Efeito</code> e <code>Nivel</code> do consum\u00edvel.</p> <pre><code>Script SQL de cria\u00e7\u00e3o da tabela Consumivel\n</code></pre> <pre><code>CREATE TABLE Consumivel (\n    idConsumivel INT PRIMARY KEY,\n    Efeito VARCHAR(100) NOT NULL,\n    Nivel INT NOT NULL,\n    CHECK (Nivel &gt;= 1)\n);\n</code></pre>"},{"location":"Entrega2/ScriptCreationTables/#tabela-de-instancia-de-item","title":"Tabela de Inst\u00e2ncia de Item","text":"<p>A tabela <code>InstanciaItem</code> armazena informa\u00e7\u00f5es sobre as inst\u00e2ncias de itens que os lutadores possuem. S\u00e3o armazenados o <code>idInstanciaItem</code>, <code>idArma</code>, <code>idArmadura</code>, <code>idAmuleto</code> e <code>idConsumivel</code> da inst\u00e2ncia de item.</p> <pre><code>Script SQL de cria\u00e7\u00e3o da tabela InstanciaItem\n</code></pre> <pre><code>CREATE TABLE InstanciaItem (\n    idInstanciaItem INT PRIMARY KEY,\n    idArma INT,\n    idArmadura INT,\n    idAmuleto INT,\n    idConsumivel INT,\n    CHECK (\n        (idArma IS NOT NULL AND idArmadura IS NULL AND idAmuleto IS NULL AND idConsumivel IS NULL) OR\n        (idArma IS NULL AND idArmadura IS NOT NULL AND idAmuleto IS NULL AND idConsumivel IS NULL) OR\n        (idArma IS NULL AND idArmadura IS NULL AND idAmuleto IS NOT NULL AND idConsumivel IS NULL) OR\n        (idArma IS NULL AND idArmadura IS NULL AND idAmuleto IS NULL AND idConsumivel IS NOT NULL)\n    ),\n    FOREIGN KEY (idArma) REFERENCES Arma(idArma) ON DELETE RESTRICT,\n    FOREIGN KEY (idArmadura) REFERENCES Armadura(idArmadura) ON DELETE RESTRICT,\n    FOREIGN KEY (idAmuleto) REFERENCES Amuleto(idAmuleto) ON DELETE RESTRICT,\n    FOREIGN KEY (idConsumivel) REFERENCES Consumivel(idConsumivel) ON DELETE RESTRICT\n);\n</code></pre>"},{"location":"Entrega2/ScriptCreationTables/#tabela-de-inventario","title":"Tabela de Inventario","text":"<p>A tabela <code>Inventario</code> armazena informa\u00e7\u00f5es sobre os invent\u00e1rios dos lutadores. S\u00e3o armazenados o <code>idInventario</code> do invent\u00e1rio.</p> <pre><code>Script SQL de cria\u00e7\u00e3o da tabela Inventario\n</code></pre> <pre><code>CREATE TABLE Inventario (\n    idInventario INT FOREIGN KEY REFERENCES Jogador(idJogador) ON DELETE RESTRICT\n);\n</code></pre>"},{"location":"Entrega2/ScriptCreationTables/#tabela-de-inventarioitem","title":"Tabela de InventarioItem","text":"<p>A tabela <code>InventarioItem</code> armazena informa\u00e7\u00f5es sobre os itens que os lutadores possuem em seus invent\u00e1rios. S\u00e3o armazenados o <code>idInventario</code> e o <code>idInstanciaItem</code> do item no invent\u00e1rio.</p> <pre><code>Script SQL de cria\u00e7\u00e3o da tabela InventarioItem\n</code></pre> <pre><code>CREATE TABLE InventarioItem (\n    idInventario INT,\n    idInstanciaItem INT,\n    PRIMARY KEY (idInventario, idInstanciaItem),\n    FOREIGN KEY (idInventario) REFERENCES Inventario(idInventario) ON DELETE RESTRICT,\n    FOREIGN KEY (idInstanciaItem) REFERENCES InstanciaItem(idInstanciaItem) ON DELETE RESTRICT\n);\n</code></pre>"}]}